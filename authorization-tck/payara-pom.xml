<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2022, 2024 Contributors to the Eclipse Foundation.
    Copyright (c) 2015, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.eclipse.ee4j.authorization.tck</groupId>
    <artifactId>jakarta-authorization-tck</artifactId>
    <version>3.0.0</version>

    <packaging>pom</packaging>

    <name>Jakarta Authorization TCK - main</name>

    <!--
        M O D U L E S

        Each module represent a different test, with the exception of the "common"
        module which contains utility code.

        To print responses received by the tests (except those from the old TCK)

        execute with mvn ... -Dtck.log.response

        For a somewhat faster execution using GlassFish use:

        mvn clean install -Dglassfish.keepServerRunning -Dglassfish.keepDeployment -DskipSBOM
    -->
    <modules>
        <module>common</module>

        <!-- Signature test for the API -->
        <module>authorization-signaturetest</module>

        <!-- Setting a custom Jakarta Authorization policy -->
        <module>app-custom-policy</module>
        <module>app-custom-policy2</module>

        <!-- Setting a custom Jakarta Authorization policy factory -->
        <module>app-custom-policyfactory</module>

        <!--
            Setting a custom Jakarta Authorization policy and policy configuration (factory) that traces
            (logs) the operations on it.
        -->
        <module>app-custom-trace-policy</module>
        <module>app-custom-trace-policyconfiguration</module>
        <module>app-custom-trace-policyconfigurationfactory</module>

        <!-- Using the default Jakarta Authorization policy from within a Servlet -->
        <module>app-policy-within-servlet</module>

        <!-- Instantiating API permission instances and calling equals and hashcode on it -->
        <module>app-permissions-equals-hashcode</module>

        <!-- Testing plain Servlet behaviour without anything Jakarta Authorization specific -->
        <module>app-servlet-constraints</module>

        <!-- Testing plain EJB behaviour without anything Jakarta Authorization specific -->
        <module>app-ejb-constraints</module>
    </modules>

    <properties>
        <maven.compiler.release>17</maven.compiler.release>

        <zipname>${project.artifactId}-${project.version}</zipname>
        <licenseFile>${project.basedir}/LICENSE_EFTL.md</licenseFile>

        <buildDirectory>${project.basedir}/target</buildDirectory>

        <payara.version>7.2024.1.Alpha2-SNAPSHOT</payara.version>
        <port.http>8080</port.http>
        <payara.suspend>false</payara.suspend>
        <payara.root>${maven.multiModuleProjectDirectory}/target</payara.root>

        <!--
            Exact artefact used by GlassFish that holds the API classes. The actual API
            jar in the GlassFish root folder is installed to these coordinates below.
            This is used by the signature test in module /authorization-signaturetest
        -->
        <sigtest.api.groupId>jakarta.authorization</sigtest.api.groupId>
        <sigtest.api.artifactId>jakarta.authorization-vendor-api</sigtest.api.artifactId>
        <sigtest.api.version>${payara.version}</sigtest.api.version>

        <junit.version>5.10.3</junit.version>
        <maven-install-plugin.version>3.1.2</maven-install-plugin.version>
        <maven-failsafe-plugin.version>3.3.0</maven-failsafe-plugin.version>

        <payara.arquillian.version>3.0</payara.arquillian.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fish.payara.api</groupId>
                <artifactId>payara-bom</artifactId>
                <version>${payara.version}</version>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>payara-client-ee9</artifactId>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.authorization</groupId>
            <artifactId>jakarta.authorization-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>


        <!-- Test dependencies which can be used in sub-modules -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>3.11.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.17.2</version>
        </dependency>
    </dependencies>

    <build>
        <directory>${buildDirectory}</directory>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.6.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>4.0.0-M13</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.9.0</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <finalName>${project.build.finalName}</finalName>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.2.5</version>
                <executions>
                    <execution>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>failsafe-report-only</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>set-port</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <target>
                                <echo level="info">Replacing in ${payara.root}</echo>
                                <replace token="8080"
                                         value="${port.http}"
                                         dir="${payara.root}/payara7/glassfish/domains/domain1/config/"
                                         summary="yes">
                                    <include name="domain.xml" />
                                </replace>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Installs the jakarta.authorization-api.jar from Payara on the filesystem to the
                coordinates expected by the signature test.
            -->
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven-install-plugin.version}</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${payara.home}/glassfish/modules/jakarta.authorization-api.jar</file>
                            <groupId>${sigtest.api.groupId}</groupId>
                            <artifactId>${sigtest.api.artifactId}</artifactId>
                            <version>${sigtest.api.version}</version>
                            <packaging>jar</packaging>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <payara.home>${payara.root}/payara7</payara.home>

                        <log.file.location>${payara.home}/glassfish/domains/domain1/logs</log.file.location>

                        <glassfish.systemProperties>
                            log.file.location=${payara.home}/glassfish/domains/domain1/logs
                            vendor.jakarta.security.jacc.PolicyConfigurationFactory.provider=org.glassfish.exousia.modules.def.DefaultPolicyConfigurationFactory
                        </glassfish.systemProperties>

                        <glassfish.postBootCommands>
                            create-file-user --groups foo:bar --passwordfile ${maven.multiModuleProjectDirectory}/reza.pass reza
                            create-file-user --groups Administrator:Manager:Employee --passwordfile ${maven.multiModuleProjectDirectory}/javajoe.pass javajoe
                            create-file-user --groups Manager:Employee --passwordfile ${maven.multiModuleProjectDirectory}/javajoe.pass Manager
                            create-file-user --groups Employee --passwordfile ${maven.multiModuleProjectDirectory}/j2ee.pass j2ee
                        </glassfish.postBootCommands>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <skipSurefireReport>${skipSurefireReport}</skipSurefireReport>
                    <aggregate>true</aggregate>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>

        <!-- ### Payara ### -->

        <profile>
            <id>payara-server-managed</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <arquillian.profile>payara-server-managed</arquillian.profile>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>fish.payara.distributions</groupId>
                    <artifactId>${payara.artifact}</artifactId>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-managed</artifactId>
                    <version>${payara.arquillian.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-server</id>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <skip>${skipTests}</skip>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.distributions</groupId>
                                            <artifactId>${payara.artifact}</artifactId>
                                            <version>${payara.version}</version>
                                            <type>zip</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>