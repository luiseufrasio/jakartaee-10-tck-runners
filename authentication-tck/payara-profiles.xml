        <profile>
            <id>payara-server-managed</id>
            <properties>
                <payara.home>${maven.multiModuleProjectDirectory}${file.separator}target/payara7</payara.home>
                <script.extension/>
                <payara.asadmin>${payara.home}${file.separator}glassfish${file.separator}bin${file.separator}asadmin${script.extension}</payara.asadmin>

                <skipConfig>${skipTests}</skipConfig>
                <skipServerStartStop>${skipTests}</skipServerStartStop>

                <payara.version>7.2024.1.Alpha3-SNAPSHOT</payara.version>
                <payara.artifact>payara</payara.artifact>

                <maven-install-plugin.version>3.1.2</maven-install-plugin.version>
                <maven-surefire-plugin.version>3.3.1</maven-surefire-plugin.version>
                <exec-maven-plugin.version>3.3.0</exec-maven-plugin.version>

                <sigtest.api.groupId>jakarta.authentication</sigtest.api.groupId>
                <sigtest.api.artifactId>jakarta.authentication-vendor-api</sigtest.api.artifactId>
                <sigtest.api.version>${payara.version}</sigtest.api.version>

                <!-- Properties expected by the TCK -->
                <provider.configuration.file>${maven.multiModuleProjectDirectory}${file.separator}spi${file.separator}common${file.separator}ProviderConfiguration.xml</provider.configuration.file>
                <log.file.location>${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}logs</log.file.location>
                <vendor.authconfig.factory>org.glassfish.epicyro.config.factory.file.AuthConfigFileFactory</vendor.authconfig.factory>
                <logical.hostname.servlet>server</logical.hostname.servlet>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>fish.payara.api</groupId>
                        <artifactId>payara-bom</artifactId>
                        <version>${payara.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-managed</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee11</artifactId>
                    <scope>test</scope>
                </dependency>

                <!-- For the unit tests in /spi/ to be able to instantiate vendor AuthConfigFactory -->
                <dependency>
                    <groupId>org.glassfish.epicyro</groupId>
                    <artifactId>epicyro</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-payara-server</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.distributions</groupId>
                                            <artifactId>${payara.artifact}</artifactId>
                                            <version>${payara.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${maven.multiModuleProjectDirectory}${file.separator}target</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>  
                    <!--
                        Installs the jakarta.authentication-api.jar from Payara on the filesystem to the
                        coordinates expected by the signature test.
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>${maven-install-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>install-payara-bundled-authentication-api-for-sigtest</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <file>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.authentication-api.jar</file>
                                    <groupId>${sigtest.api.groupId}</groupId>
                                    <artifactId>${sigtest.api.artifactId}</artifactId>
                                    <version>${sigtest.api.version}</version>
                                    <packaging>jar</packaging>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${exec-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>start-payara-server-for-config</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <skip>${skipServerStartStop}</skip>
                                    <executable>${payara.asadmin}</executable>
                                    <arguments>
                                        <argument>start-domain</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <!-- Use singular create-system-property command to allow this to work on Windows - the asadmin separator of : doesn't play well with Windows paths -->
                            <execution>
                                <id>create-expected-tck-property-j2eelogin.name</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <skip>${skipConfig}</skip>
                                    <executable>${payara.asadmin}</executable>
                                    <arguments>
                                        <argument>create-system-property</argument>
                                        <argument>j2eelogin.name=j2ee</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-expected-tck-property-j2eelogin.password</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <skip>${skipConfig}</skip>
                                    <executable>${payara.asadmin}</executable>
                                    <arguments>
                                        <argument>create-system-property</argument>
                                        <argument>j2eelogin.password=j2ee</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-expected-tck-propertt-provider.configuration.file</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <skip>${skipConfig}</skip>
                                    <executable>${payara.asadmin}</executable>
                                    <arguments>
                                        <argument>create-system-property</argument>
                                        <argument>provider.configuration.file=${provider.configuration.file}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-expected-tck-property-vendor.authconfig.factory</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <skip>${skipConfig}</skip>
                                    <executable>${payara.asadmin}</executable>
                                    <arguments>
                                        <argument>create-system-property</argument>
                                        <argument>vendor.authconfig.factory=${vendor.authconfig.factory}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-expected-tck-property-log.file.location</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <skip>${skipConfig}</skip>
                                    <executable>${payara.asadmin}</executable>
                                    <arguments>
                                        <argument>create-system-property</argument>
                                        <argument>log.file.location=${log.file.location}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-payara-server-after-config</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <skip>${skipServerStartStop}</skip>
                                    <executable>${payara.asadmin}</executable>
                                    <arguments>
                                        <argument>stop-domain</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <configuration>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}webservices.security.jar</additionalClasspathElement>
                            </additionalClasspathElements>
                            <systemPropertyVariables>
                                <payara.home>${payara.home}</payara.home>
                                <provider.configuration.file>${provider.configuration.file}</provider.configuration.file>
                                <vendor.authconfig.factory>${vendor.authconfig.factory}</vendor.authconfig.factory>
                                <log.file.location>${log.file.location}</log.file.location>
                                <logical.hostname.servlet>${logical.hostname.servlet}</logical.hostname.servlet>
                            </systemPropertyVariables>
                            <runOrder>alphabetical</runOrder>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <repositories>
                <repository>
                    <id>payara-nexus-artifacts</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-artifacts</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>payara-nexus-snapshots</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-snapshots</url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>payara-nexus-enterprise-artifacts</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-enterprise-artifacts-private</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>payara-nexus-enterprise-snapshots</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-enterprise-snapshots-private</url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>payara-nexus-enterprise-distributions</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-enterprise</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>
        </profile>
        <profile>
            <id>payara-server-remote</id>
            <properties>
                <payara.home>${maven.multiModuleProjectDirectory}/target/payara7</payara.home>
                <script.extension/>
                <payara.asadmin>${payara.home}${file.separator}glassfish${file.separator}bin${file.separator}asadmin${script.extension}</payara.asadmin>

                <skipConfig>${skipTests}</skipConfig>
                <skipServerStartStop>${skipTests}</skipServerStartStop>

                <payara.version>7.2024.1.Alpha3-SNAPSHOT</payara.version>

                <maven-install-plugin.version>3.1.2</maven-install-plugin.version>
                <maven-surefire-plugin.version>3.3.1</maven-surefire-plugin.version>
                <exec-maven-plugin.version>3.3.0</exec-maven-plugin.version>

                <sigtest.api.groupId>jakarta.authentication</sigtest.api.groupId>
                <sigtest.api.artifactId>jakarta.authentication-vendor-api</sigtest.api.artifactId>
                <sigtest.api.version>${payara.version}</sigtest.api.version>

                <!-- Properties expected by the TCK -->
                <provider.configuration.file>${maven.multiModuleProjectDirectory}${file.separator}spi${file.separator}common${file.separator}ProviderConfiguration.xml</provider.configuration.file>
                <log.file.location>${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}logs</log.file.location>
                <vendor.authconfig.factory>org.glassfish.epicyro.config.factory.file.AuthConfigFileFactory</vendor.authconfig.factory>
                <logical.hostname.servlet>server</logical.hostname.servlet>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>fish.payara.api</groupId>
                        <artifactId>payara-bom</artifactId>
                        <version>${payara.version}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-remote</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee11</artifactId>
                    <scope>test</scope>
                </dependency>

                <!-- For the unit tests in /spi/ to be able to instantiate vendor AuthConfigFactory -->
                <dependency>
                    <groupId>org.glassfish.epicyro</groupId>
                    <artifactId>epicyro</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <!--
                        Installs the jakarta.authentication-api.jar from Payara on the filesystem to the
                        coordinates expected by the signature test.
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>${maven-install-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>install-payara-bundled-authentication-api-for-sigtest</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <file>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.authentication-api.jar</file>
                                    <groupId>${sigtest.api.groupId}</groupId>
                                    <artifactId>${sigtest.api.artifactId}</artifactId>
                                    <version>${sigtest.api.version}</version>
                                    <packaging>jar</packaging>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                        <configuration>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}webservices.security.jar</additionalClasspathElement>
                            </additionalClasspathElements>
                            <systemPropertyVariables>
                                <payara.home>${payara.home}</payara.home>
                                <provider.configuration.file>${provider.configuration.file}</provider.configuration.file>
                                <vendor.authconfig.factory>${vendor.authconfig.factory}</vendor.authconfig.factory>
                                <log.file.location>${log.file.location}</log.file.location>
                                <logical.hostname.servlet>${logical.hostname.servlet}</logical.hostname.servlet>
                            </systemPropertyVariables>
                            <runOrder>alphabetical</runOrder>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <repositories>
                <repository>
                    <id>payara-nexus-artifacts</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-artifacts</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>payara-nexus-snapshots</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-snapshots</url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>payara-nexus-enterprise-artifacts</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-enterprise-artifacts-private</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>payara-nexus-enterprise-snapshots</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-enterprise-snapshots-private</url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>payara-nexus-enterprise-distributions</id>
                    <url>https://nexus.dev.payara.fish/repository/payara-enterprise</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <script.extension>.bat</script.extension>
            </properties>
            <build>
                <plugins>
                    <!-- Skip this plugin on Windows as it doesn't understand Windows paths -->
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>2.1.1</version>
                        <executions>
                            <execution>
                                <id>print-test-result</id>
                                <phase>none</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


